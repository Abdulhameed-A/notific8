{"version":3,"file":"jquery.notific8.min.js","sources":["jquery.notific8.js"],"names":["$","settings","methods","self","supports","life","theme","sticky","verticalEdge","horizontalEdge","zindex","destroy","$this","data","window","unbind","removeData","buildNotification","close","notification","num","Number","animate","styles","$container","addClass","attr","hasOwnProperty","heading","append","html","find","on","closeNotification","message","transition","setTimeout","n","l","duration","complete","removeClass","height","remove","outerWidth","configure","options","extend","z","init","each","this","target","initContainers","$body","css","checkEdges","toLowerCase","css3Support","prop","i","len","capitalize","pNoPrefix","p","split","pStr","s","document","createElement","style","charAt","toUpperCase","slice","length","replace","notific8","apply","size","fn","arguments","error","jQuery"],"mappings":"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","sourcesContent":["/**\n * @author Will Steinmetz\n * jQuery notification plug-in inspired by the notification style of Windows 8\n * Copyright (c)2013, Will Steinmetz\n * Licensed under the BSD license.\n * http://opensource.org/licenses/BSD-3-Clause\n */\n(function ($) {\n    \"use strict\";\n\n    var settings,\n        methods,\n        self,\n        supports;\n\n    settings = {\n        life: 10000,\n        theme: 'teal',\n        sticky: false,\n        verticalEdge: 'right',\n        horizontalEdge: 'top',\n        zindex: 1100\n    };\n\n    methods = (function () {\n        /**\n         * Destroy the notification\n         * @param object $this\n         */\n        function destroy($this) {\n            var data = $this.data('notific8');\n\n            $(window).unbind('.notific8');\n            $this.removeData('notific8');\n        }\n\n        /**\n         * Build the notification and add it to the screen's stack\n         * @param object $this\n         */\n        function buildNotification($this) {\n            var data = $this.data('notific8'),\n                notification = $('<div />'),\n                num = Number($('body').data('notific8s')),\n                close,\n                animate = 'margin-' + data.settings.verticalEdge,\n                styles = {},\n                $container = $('.jquery-notific8-container.' + data.settings.verticalEdge + '.' + data.settings.horizontalEdge);\n\n            num += 1;\n\n            notification.addClass('jquery-notific8-notification').addClass(data.settings.theme);\n            notification.attr('id', 'jquery-notific8-notification-' + num);\n            $('body').data('notific8s', num);\n\n            // check for a heading\n            if (data.settings.hasOwnProperty('heading') && (typeof data.settings.heading === \"string\")) {\n                notification.append($('<div />').addClass('jquery-notific8-heading').html(data.settings.heading));\n            }\n\n            // check if the notification is supposed to be sticky\n            close = $('<div />').append('<span />');\n            if (data.settings.sticky) {\n                close.addClass('jquery-notific8-close-sticky').find('span').html('close x');\n                notification.addClass('sticky');\n            } else {\n                close.addClass('jquery-notific8-close').find('span').html('X');\n            }\n            close.on('click', function (event) {\n                closeNotification(notification, styles, animate);\n            });\n            notification.append(close);\n\n            // add the message\n            notification.append($('<div />').addClass('jquery-notific8-message').html(data.message));\n\n            // add the notification to the stack\n            $container.append(notification);\n\n            // slide the message onto the screen\n            if (supports.transition) {\n                setTimeout(function () {\n                    notification.addClass('open');\n                    if (!data.settings.sticky) {\n                        (function (n, l) {\n                            setTimeout(function () {\n                                closeNotification(n);\n                            }, l);\n                        }(notification, Number(data.settings.life) + 200));\n                    }\n                }, 5);\n            } else {\n                styles[animate] = 0;\n                notification.animate(styles, {\n                    duration: 'fast',\n                    complete: function () {\n                        if (!data.settings.sticky) {\n                            (function (n, l) {\n                                setTimeout(function () {\n                                    closeNotification(n, styles, animate);\n                                }, l);\n                            }(notification, data.settings.life));\n                        }\n                        data.settings = {};\n                    }\n                });\n            }\n        }\n\n        /**\n         * Close the given notification\n         * @param object n\n         * @param object styles\n         * @param animate\n         */\n        function closeNotification(n, styles, animate) {\n            if (supports.transition) {\n                n.removeClass('open');\n                n.height(0);\n                setTimeout(function () {\n                    n.remove()\n                }, 200);\n            } else {\n                styles[animate] = notification.outerWidth() * -1;\n                styles.height = 0;\n                n.animate(styles, {\n                    duration: 'fast',\n                    complete: function () {\n                        n.remove();\n                    }\n                });\n            }\n        }\n\n        /**\n         * Set up the configuration settings\n         * @param object options\n         */\n        function configure(options) {\n            $.extend(settings, options);\n        }\n\n        /**\n         * Set up the z-index\n         * @param int z\n         */\n        function zindex(z) {\n            settings.zindex = z;\n        }\n\n        /**\n         * Initialize the plug-in\n         * @param string message\n         * @param object options\n         * @return object\n         */\n        function init(message, options) {\n            return self.each(function () {\n                var $this = $(this),\n                    data = $this.data('notific8');\n\n                $this.data('notific8', {\n                    target: $this,\n                    settings: {},\n                    message: \"\"\n                });\n                data = $this.data('notific8');\n                data.message = message;\n\n                // apply the options\n                $.extend(data.settings, settings, options);\n\n                // add the notification to the stack\n                buildNotification($this);\n            });\n        }\n\n        /**\n         * Initialize the containers for the plug-in\n         */\n        function initContainers() {\n            var $body = $('body');\n            $body.data('notific8s', 0);\n            $body.append($('<div class=\"jquery-notific8-container top right\"></div>'));\n            $body.append($('<div class=\"jquery-notific8-container top left\"></div>'));\n            $body.append($('<div class=\"jquery-notific8-container bottom right\"></div>'));\n            $body.append($('<div class=\"jquery-notific8-container bottom left\"></div>'));\n            $('.jquery-notific8-container').css('z-index', settings.zindex);\n        }\n\n        /**\n         * Make sure that the edge options are ok\n         * @param object options\n         */\n        function checkEdges(options) {\n            options.verticalEdge = options.verticalEdge.toLowerCase() || settings.verticalEdge;\n            options.horizontalEdge = options.horizontalEdge.toLowerCase() || settings.horizontalEdge;\n\n            if ((options.verticalEdge !== 'right') && (options.verticalEdge !== 'left')) {\n                options.verticalEdge = settings.verticalEdge;\n            }\n            if ((options.horizontalEdge !== 'top') && (options.horizontalEdge !== 'bottom')) {\n                options.horizontalEdge = settings.horizontalEdge;\n            }\n        }\n\n        /**\n         * Determine support for CSS3 property\n         * @param string prop\n         */\n        function css3Support(prop) {\n            var p = prop.split('-'),\n                pStr = '',\n                i,\n                len,\n                s = document.createElement('p').style,\n                capitalize,\n                pNoPrefix;\n\n            capitalize = function (l) {\n                return l.charAt(0).toUpperCase() + l.slice(1);\n            };\n\n            for (i = 0, len = p.length; i < len; i = i + 1) {\n                pStr = pStr + p[i].toLowerCase().replace(/\\b\\w{3,}/g, capitalize);\n            }\n\n            pNoPrefix = pStr.charAt(0).toLowerCase() + pStr.slice(1);\n\n            supports[prop] = s.hasOwnProperty(pNoPrefix) ||\n                s.hasOwnProperty('Webkit' + pStr) ||\n                s.hasOwnProperty('Moz' + pStr) ||\n                s.hasOwnProperty('ms' + pStr) ||\n                s.hasOwnProperty('O' + pStr);\n        }\n\n        return {\n            init:           init,\n            destroy:        destroy,\n            configure:      configure,\n            zindex:         zindex,\n            initContainers: initContainers,\n            checkEdges:     checkEdges,\n            css3Support:    css3Support\n        };\n    }());\n\n    /**\n     * wrapper since this plug-in is called without selecting an element first\n     * @param string message\n     * @param object options\n     */\n    $.notific8 = function (message, options) {\n        switch (message) {\n        case 'configure':\n        case 'config':\n            return methods.configure.apply(this, [options]);\n        case 'zindex':\n            return methods.zindex.apply(this, [options]);\n        default:\n            if (typeof options === 'undefined') {\n                options = {};\n            }\n\n            // make sure that the stack containers exist\n            if ($('.jquery-notific8-container').size() === 0) {\n                methods.initContainers();\n            }\n\n            // make sure the edge settings exist\n            methods.checkEdges(options);\n\n            //display the notification in the right corner\n            $('.jquery-notific8-container.' + options.verticalEdge + '.' + options.horizontalEdge).notific8(message, options);\n            break;\n        }\n    };\n\n    /**\n     * plugin setup\n     */\n    $.fn.notific8 = function (message, options) {\n        self = this;\n\n        if (typeof supports === 'undefined') {\n            supports = {};\n            methods.css3Support('transition');\n        }\n\n        if (typeof message === \"string\") {\n            return methods.init.apply(this, arguments);\n        } else {\n            $.error('jQuery.notific8 takes a string message as the first parameter');\n        }\n    };\n}(jQuery));\n"],"sourceRoot":"/source/"}