{"version":3,"file":"jquery.notific8.min.js","sources":["jquery.notific8.js"],"names":["$","settings","methods","self","life","theme","sticky","verticalEdge","horizontalEdge","zindex","destroy","$this","data","window","unbind","removeData","buildNotification","close","notification","num","Number","attr","addClass","hasOwnProperty","heading","append","html","on","animate","width","duration","complete","remove","message","n","l","setTimeout","configure","options","extend","z","init","each","this","target","notific8","apply","size","$body","css","toLowerCase","fn","arguments","error","jQuery"],"mappings":"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","sourcesContent":["/**\n * @author Will Steinmetz\n * jQuery notification plug-in inspired by the notification style of Windows 8\n * Copyright (c)2013, Will Steinmetz\n * Licensed under the BSD license.\n * http://opensource.org/licenses/BSD-3-Clause\n */\n(function ($) {\n    \"use strict\";\n\n    var settings,\n        methods,\n        self;\n\n    settings = {\n        life: 10000,\n        theme: 'teal',\n        sticky: false,\n        verticalEdge: 'right',\n        horizontalEdge: 'top',\n        zindex: 1100\n    };\n\n    methods = (function () {\n        /**\n         * Destroy the notification\n         * @param object $this\n         */\n        function destroy($this) {\n            var data = $this.data('notific8');\n\n            $(window).unbind('.notific8');\n            $this.removeData('notific8');\n        }\n\n        /**\n         * Build the notification and add it to the screen's stack\n         * @param object $this\n         */\n        function buildNotification($this) {\n            var data = $this.data('notific8'),\n                notification = $('<div />'),\n                num = Number($('body').attr('data-notific8s')),\n                close;\n            num += 1;\n\n            notification.addClass('jquery-notific8-notification').addClass(data.settings.theme);\n            notification.attr('id', 'jquery-notific8-notification-' + num);\n            $('body').attr('data-notific8s', num);\n\n            // check for a heading\n            if (data.settings.hasOwnProperty('heading') && (typeof data.settings.heading === \"string\")) {\n                notification.append($('<div />').addClass('jquery-notific8-heading').html(data.settings.heading));\n            }\n\n            // check if the notification is supposed to be sticky\n            if (data.settings.sticky) {\n                close = $('<div />').addClass('jquery-notific8-close-sticky').append(\n                    $('<span />').html('close x')\n                );\n                close.on('click', function (event) {\n                    notification.animate({width: 'hide'}, {\n                        duration: 'fast',\n                        complete: function () {\n                            notification.remove();\n                        }\n                    });\n                });\n                notification.append(close);\n                notification.addClass('sticky');\n            // otherwise, put the normal close button up that is only display\n            // when the notification is hovered over\n            } else {\n                close = $('<div />').addClass('jquery-notific8-close').append(\n                    $('<span />').html('X')\n                );\n                close.on('click', function (event) {\n                    notification.animate({width: 'hide'}, {\n                        duration: 'fast',\n                        complete: function () {\n                            notification.remove();\n                        }\n                    });\n                });\n                notification.append(close);\n            }\n\n            // add the message\n            notification.append($('<div />').addClass('jquery-notific8-message').html(data.message));\n\n            // add the notification to the stack\n            $('.jquery-notific8-container.' + data.settings.verticalEdge + '.' + data.settings.horizontalEdge).append(notification);\n\n            // slide the message onto the screen\n            notification.animate({width: 'show'}, {\n                duration: 'fast',\n                complete: function () {\n                    if (!data.settings.sticky) {\n                        (function (n, l) {\n                            setTimeout(function () {\n                                n.animate({width: 'hide'}, {\n                                    duration: 'fast',\n                                    complete: function () {\n                                        n.remove();\n                                    }\n                                });\n                            }, l);\n                        }(notification, data.settings.life));\n                    }\n                    data.settings = {};\n                }\n            });\n        }\n\n        /**\n         * Set up the configuration settings\n         * @param object options\n         */\n        function configure(options) {\n            $.extend(settings, options);\n        }\n\n        /**\n         * Set up the z-index\n         * @param int z\n         */\n        function zindex(z) {\n            settings.zindex = z;\n        }\n        \n        /**\n         * Initialize the plug-in\n         * @param string message\n         * @param object options\n         * @return object\n         */\n        function init(message, options) {\n            return self.each(function () {\n                var $this = $(this),\n                    data = $this.data('notific8');\n\n                $this.data('notific8', {\n                    target: $this,\n                    settings: {},\n                    message: \"\"\n                });\n                data = $this.data('notific8');\n                data.message = message;\n\n                // apply the options\n                $.extend(data.settings, settings, options);\n\n                // add the notification to the stack\n                buildNotification($this);\n            });\n        }\n\n        return {\n            init: init,\n            destroy: destroy,\n            configure: configure,\n            zindex: zindex\n        };\n    }());\n\n    /**\n     * wrapper since this plug-in is called without selecting an element first\n     * @param string message\n     * @param object options\n     */\n    $.notific8 = function (message, options) {\n        switch (message) {\n        case 'configure':\n        case 'config':\n            return methods.configure.apply(this, [options]);\n        case 'zindex':\n            return methods.zindex.apply(this, [options]);\n        default:\n            if (typeof options === 'undefined') {\n                options = {};\n            }\n\n            // make sure that the stack containers exist\n            if ($('.jquery-notific8-container').size() === 0) {\n                var $body = $('body');\n                $body.attr('data-notific8s', 0);\n                $body.append($('<div />').addClass('jquery-notific8-container').addClass('top').addClass('right'));\n                $body.append($('<div />').addClass('jquery-notific8-container').addClass('top').addClass('left'));\n                $body.append($('<div />').addClass('jquery-notific8-container').addClass('bottom').addClass('right'));\n                $body.append($('<div />').addClass('jquery-notific8-container').addClass('bottom').addClass('left'));\n                $('.jquery-notific8-container').css('z-index', settings.zindex);\n            }\n\n            // make sure the edge settings exist\n            if ((!options.hasOwnProperty('verticalEdge')) || ((options.verticalEdge.toLowerCase() !== 'right') && (options.verticalEdge.toLowerCase() !== 'left'))) {\n                options.verticalEdge = settings.verticalEdge;\n            }\n            if ((!options.hasOwnProperty('horizontalEdge')) || ((options.horizontalEdge.toLowerCase() !== 'top') && (options.horizontalEdge.toLowerCase() !== 'bottom'))) {\n                options.horizontalEdge = settings.horizontalEdge;\n            }\n            options.verticalEdge = options.verticalEdge.toLowerCase();\n            options.horizontalEdge = options.horizontalEdge.toLowerCase();\n\n            //display the notification in the right corner\n            $('.jquery-notific8-container.' + options.verticalEdge + '.' + options.horizontalEdge).notific8(message, options);\n            break;\n        }\n    };\n\n    /**\n     * plugin setup\n     */\n    $.fn.notific8 = function (message, options) {\n        self = this;\n\n        if (typeof message === \"string\") {\n            return methods.init.apply(this, arguments);\n        } else {\n            $.error('jQuery.notific8 takes a string message as the first parameter');\n        }\n    };\n}(jQuery));\n"],"sourceRoot":"/source/"}